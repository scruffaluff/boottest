---
- name: Install FD for FreeBSD
  become: true
  community.general.pkgng:
    name: fd-find
  when: ansible_system == "FreeBSD"

- name: Get latest FD version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/fd.json
  register: fd_formula
  when: ansible_system == "Linux"

- name: Download FD for Linux
  ansible.builtin.unarchive:
    dest: /tmp
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/sharkdp/fd/releases/download/v{{
      fd_formula.json.versions.stable }}/fd-v{{ fd_formula.json.versions.stable
      }}-{{ fd_arch }}-unknown-linux-{{ system_libc }}.tar.gz
  when: ansible_system == "Linux"

- name: Install FD for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/fd
    force: true
    mode: "755"
    remote_src: true
    src: >-
      /tmp/fd-v{{ fd_formula.json.versions.stable }}-{{ fd_arch
      }}-unknown-linux-{{ system_libc }}/fd
  become: true
  when: ansible_system == "Linux"

- name: Install FD for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: fd
  when: ansible_system == "Darwin"

- name: Install FD for Windows
  community.windows.win_scoop:
    global: "{{ scoop_global }}"
    name: fd
  when: ansible_system == "Win32NT"

- name: Create shell completion directories for Linux
  ansible.builtin.file:
    mode: "755"
    path: "{{ item }}"
    state: directory
  become: true
  loop:
    - "{{ bash_completion }}"
    - "{{ fish_completion }}"
  when: ansible_system == "Linux"

- name: Install Fd shell completions for Linux
  ansible.builtin.copy:
    dest: "{{ item.dest }}"
    force: true
    mode: "644"
    remote_src: true
    src: >-
      /tmp/fd-v{{ fd_formula.json.versions.stable }}-{{ fd_arch
      }}-unknown-linux-{{ system_libc }}/autocomplete/fd.{{ item.shell }}
  become: true
  loop:
    - dest: "{{ bash_completion }}/fd"
      shell: bash
    - dest: "{{ fish_completion }}/fd.fish"
      shell: fish
  when: ansible_system == "Linux"
