---
- name: Install Termshark for FreeBSD
  become: true
  community.general.pkgng:
    name: termshark
  when: ansible_system == "FreeBSD"

- name: Install Wireshark CLI for Linux
  ansible.builtin.package:
    name: "{{ termshark_package[ansible_pkg_mgr] }}"
  become: true
  vars:
    termshark_package:
      apk: tshark
      apt: tshark
      dnf: wireshark-cli
      dnf5: wireshark-cli
      pacman: wireshark-cli
      zypper: wireshark
  when: ansible_system == "Linux"

- name: Get latest Termshark version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/formula/termshark.json
  register: termshark_formula
  when: ansible_system == "Linux"

- name: Download Termshark for Linux
  ansible.builtin.unarchive:
    dest: /tmp
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/gcla/termshark/releases/download/v{{
      termshark_formula.json.versions.stable }}/termshark_{{
      termshark_formula.json.versions.stable }}_linux_{{ termshark_arch
      }}.tar.gz
  when: ansible_system == "Linux"

- name: Install Termshark for Linux
  ansible.builtin.copy:
    dest: /usr/local/bin/termshark
    force: true
    mode: "755"
    remote_src: true
    src: >-
      /tmp/termshark_{{ termshark_formula.json.versions.stable }}_linux_{{
      termshark_arch }}/termshark
  become: true
  when: ansible_system == "Linux"

# Do not install the Wireshark formula. It conflicts with the Wireshark cask.
- name: Install Termshark for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: termshark
  when: ansible_system == "Darwin"

- name: Install Wireshark for Windows
  community.windows.win_scoop:
    global: "{{ scoop_global }}"
    name: termshark
  when: ansible_system == "Win32NT"

- name: Configure Wireshark group for Debian
  ansible.builtin.debconf:
    name: wireshark-common
    question: wireshark-common/install-setuid
    value: true
    vtype: boolean
  become: true
  when: ansible_pkg_mgr == "apt"

- name: Create Wireshark group for Debian
  ansible.builtin.command:
    cmd: dpkg-reconfigure wireshark-common
  become: true
  # TODO: Figure out update message.
  changed_when: true
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: ansible_pkg_mgr == "apt"

- name: Add user to Wireshark group for Linux
  ansible.builtin.user:
    append: true
    groups:
      - wireshark
    name: "{{ user_id }}"
  become: true
  when: ansible_system == "Linux"

- name: Create Termshark configuration directory for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.config/termshark"
    state: directory
  become: true
  when: ansible_system not in ["Darwin", "Win32NT"]

- name: Create Termshark configuration directory for MacOS
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/Library/Application Support/termshark"
    state: directory
  become: true
  when: ansible_system == "Darwin"

- name: Create Termshark configuration directory for Windows
  ansible.windows.win_file:
    owner: "{{ user_id }}"
    path: "{{ user_home }}/AppData/Roaming/termshark"
    state: directory
  when: ansible_system == "Win32NT"

- name: Copy Termshark configuration file for Unix
  ansible.builtin.copy:
    dest: "{{ user_home }}/.config/termshark/termshark.toml"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: termshark.toml
  become: true
  when: ansible_system not in ["Darwin", "Win32NT"]

- name: Copy Termshark configuration file for MacOS
  ansible.builtin.copy:
    dest: >-
      {{ user_home }}/Library/Application Support/termshark/termshark.toml
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: termshark.toml
  become: true
  when: ansible_system == "Darwin"

- name: Copy Termshark configuration file for Windows
  ansible.windows.win_copy:
    dest: "{{ user_home }}/AppData/Roaming/termshark/termshark.toml"
    force: true
    owner: "{{ user_id }}"
    src: termshark.toml
  when: ansible_system == "Win32NT"
